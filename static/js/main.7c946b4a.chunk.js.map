{"version":3,"sources":["MainMenu/Resources/logo.svg","iGo/Resources/logo.svg","MainMenu/MainMenu.js","Friends/Friends.js","Events/Events.js","Notifications/Notifications.js","iGo/Resources/notificationsList.js","iGo/iGo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MainMenu","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","es","className","enableKeyboardControls","renderCenterLeftControls","renderCenterRightControls","MainMenu_Entry","title","src","logo","Component","Entry","_ref","react_router_dom","to","type","alt","_default","props","_this","call","afterSlide","notificationIndex","setState","lastRemovedNotification","notifications","splice","bind","assertThisInitialized","markRead","isRead","latestReadNotificationIndex","_this2","map","notification","index","Notifications_Notification","text","toString","source","Notification","_Component2","_this3","withoutControls","slideIndex","style","backgroundColor","onClick","event","notificationsList","iGo","react_router","exact","path","component","InitialScreen","Friends","Events","Notifications_Notifications_default","ButtonContainer","_Component3","goBack","location","pathname","history","console","debug","App","iGo_iGo_iGo","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c946b4a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React , {Component} from 'react';\nimport ReactSwipe from 'nuka-carousel'\nimport { Link } from \"react-router-dom\";\n\nimport \"./MainMenu.css\"\nimport logo from \"./Resources/logo.svg\"\n\nexport class MainMenu extends Component {\n  render() {\n    return(\n      <ReactSwipe\n        className={\"MainMenu\"}\n        enableKeyboardControls={true}\n        renderCenterLeftControls={() => (false)}\n        renderCenterRightControls={() => (false)}\n      >\n        <div className={\"MainMenu-Friends\"}>\n          <Entry\n            title={\"Friends\"}\n            src={logo}\n          />\n        </div>\n        <div className={\"MainMenu-Events\"}>\n          <Entry\n            title={\"Events\"}\n            src={logo}\n          />\n        </div>\n        <div className={\"MainMenu-Notifications\"}>\n          <Entry\n            title={\"Notifications\"}\n            src={logo}\n          />\n        </div>\n      </ReactSwipe>\n    );\n  }\n}\n\nexport const Entry = ({title, src}) => (\n  <div\n    className={\"MainMenu-Entry\"}\n  >\n    {title}\n    <Link to={\"/\" + title}>\n      <input\n        type={\"image\"}\n        alt={title + \"-image\"}\n        src={src}\n      />\n    </Link>\n  </div>\n);","import React, { Component } from 'react'\nimport './Friends.css'\n\nexport default class extends Component {\n  render() {\n    return(\n      <div className={\"Friends\"}>\n        Friends section still in Development!\n      </div>\n    );\n  }\n}","import React, { Component } from 'react'\nimport './Events.css'\n\nexport default class extends Component {\n  render() {\n    return(\n      <div className={\"Events\"}>\n        Events section still in Development!\n      </div>\n    );\n  }\n}","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\n\nimport './Notifications.css'\nimport ReactSwipe from 'nuka-carousel';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.afterSlide = this.afterSlide.bind(this);\n    this.markRead = this.markRead.bind(this);\n  }\n\n  markRead(notificationIndex) {\n    if (!this.props.notifications[notificationIndex].isRead) {\n      this.props.notifications[notificationIndex].isRead = true;\n      this.setState({\n        latestReadNotificationIndex: notificationIndex\n      });\n    }\n  }\n\n  afterSlide = (notificationIndex) => {\n    this.setState({\n      lastRemovedNotification: this.props.notifications.splice(notificationIndex, 1)[0]\n    });\n  };\n\n  render() {\n    return(\n      <div>\n        <header className={\"Notifications-Title\"}>\n          Notifications\n        </header>\n        <main>\n          <div className={\"Notifications\"}>\n            {this.props.notifications.map( (notification, index) => (\n              <Notification\n                isRead={notification.isRead}\n                text={notification.text}\n                key={notification.text + index.toString()}\n                index={index}\n                afterSlide={this.afterSlide}\n                markRead={this.markRead}\n                source={notification.source}\n              />\n            ))}\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport class Notification extends Component {\n  render() {\n    return (\n      <ReactSwipe\n        withoutControls={true}\n        afterSlide={(slideIndex) => {\n          if(slideIndex === 2)\n            this.props.afterSlide(this.props.index)\n        }}\n      >\n        <div\n          className={\"Notifications-Entry\"}\n          style={{backgroundColor: this.props.isRead ? 'white' : 'gray'}}\n          onClick={(event) => this.props.markRead(this.props.index)}\n        >\n          {this.props.text}\n        </div>\n        <div className={\"Notifications-Open\"}>\n          <Link to={this.props.source}>\n              <div>\n                  OPEN\n              </div>\n          </Link>\n        </div>\n        <div className={\"Notifications-Delete\"}>\n          DELETE!!!\n        </div>\n      </ReactSwipe>\n    );\n  }\n}","export const notificationsList = [\n  {\n    text: \"Already read Friend notification!\",\n    isRead: true,\n    source: \"/Friends\"\n  },\n  {\n    text: \"Unread Friend notification.\",\n    isRead: false,\n    source: \"/Friends\"\n  },\n  {\n    text: \"Already read Event notification!\",\n    isRead: true,\n    source: \"/Events\"\n  },\n  {\n    text: \"Unread Event notification.\",\n    isRead: false,\n    source: \"/Events\"\n  },\n  {\n    text: \"Already read Friend notification!  Overflow text on purpose.\",\n    isRead: false,\n    source: \"/Friends\"\n  },\n  {\n    text: \"Unread Event notification.\",\n    isRead: true,\n    source: \"/Events\"\n  }\n];","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\n\nimport \"./iGo.css\"\nimport { MainMenu } from \"../MainMenu/MainMenu\";\nimport Friends from \"../Friends/Friends\";\nimport Events from \"../Events/Events\";\nimport Notifications from \"../Notifications/Notifications\";\n\n// Resources\nimport logo from \"./Resources/logo.svg\"\nimport { notificationsList } from \"./Resources/notificationsList\";\n\nexport default class iGo extends Component {\n  notifications = notificationsList;\n\n  render() {\n    return(\n      <Router>\n        <div className={\"iGo\"}>\n          <Switch>\n            <Route exact path={\"/\"} component={InitialScreen}/>\n            <Route path={\"/igo\"}>\n              <h1>\n                Press HOME to turn ON!\n              </h1>\n            </Route>\n            <Route path={\"/Menu\"} component={MainMenu}/>\n            <Route path={\"/Friends\"} component={Friends}/>\n            <Route path={\"/Events\"} component={Events}/>\n            <Route path={\"/Notifications\"}>\n              <Notifications\n                notifications={this.notifications}\n              />\n            </Route>\n          </Switch>\n        </div>\n        <Route path={\"/\"} component={ButtonContainer}/>\n      </Router>\n    );\n  }\n}\n\nexport class InitialScreen extends Component {\n  render() {\n    return(\n      <div className={\"iGo-InitialScreen\"}>\n        <Link to={\"/Menu\"}>\n          <input\n            type={\"image\"}\n            alt={\"logo\"}\n            src={logo}\n            className={\"App-logo\"}\n          />\n          <h1>\n            iGo\n          </h1>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport class ButtonContainer extends Component {\n  constructor(props){\n    super(props);\n    this.goBack = this.goBack.bind(this);\n  }\n\n  goBack(){\n    if(this.props.location.pathname !== \"/igo/\" && this.props.location.pathname !== \"/\")\n      this.props.history.goBack();\n  }\n\n  render() {\n    console.debug(\"Button Container Props: \", this.props);\n\n    return (\n      <div className={\"Button-container\"}>\n        <Link to={\"/\"}>\n          <button>\n            HOME\n          </button>\n        </Link>\n        <button onClick={this.goBack}>\n          BACK\n        </button>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\n\n// IGo with capitalized I because React PureComponents need to start with capitalized letter\nimport IGo from \"./iGo/iGo\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <IGo/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}